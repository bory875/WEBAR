(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const s of i.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&a(s)}).observe(document,{childList:!0,subtree:!0});function c(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function a(e){if(e.ep)return;e.ep=!0;const i=c(e);fetch(e.href,i)}})();let n={video:{facingMode:"environment",width:1280,height:720},audio:!1},r=document.getElementById("webcam"),h=document.getElementById("switchCamButton"),g=document.getElementById("transferCanvas");document.getElementById("displayCanvas");let d=!1;function l(o){let t=o.cloneNode(!0);return o.parentElement.replaceChild(t,o),o.remove(),t}window.startAR=function(){cv2.then(t=>{class c{constructor(){this.matrices={},this.FPS=30,this.webcam=r,h=l(h)}onVideoLoaded(s){this.webcam=s,this.width=s.videoWidth,this.height=s.videoHeight,this.context=g.getContext("2d",{willReadFrequently:!0}),this.context.canvas.width=this.width,this.context.canvas.height=this.height,this.first=!0,this.matrices.rgba1=new t.Mat(this.height,this.width,t.CV_8UC4),this.matrices.rgba2=new t.Mat(this.height,this.width,t.CV_8UC4),this.matrices.descriptors=new t.Mat,this.matrices.keypoints=new t.KeyPointVector,this.matrices.oldDescriptors=new t.Mat,this.matrices.matches=new t.DMatchVector,this.orb=new t.ORB(200,1.2,8,31,0,2),this.orb.setFastThreshold(20),this.bfMatcher=new t.BFMatcher(t.NORM_HAMMING,!0),this.startProcessing()}startProcessing(){if(this.stopped===!0)return;let s=Date.now();this.loadImage(),this.orb.detect(this.matrices.rgba1,this.matrices.keypoints),this.orb.compute(this.matrices.rgba1,this.matrices.keypoints,this.matrices.descriptors),this.first&&(this.matrices.oldDescriptors=this.matrices.descriptors.clone()),t.drawKeypoints(this.matrices.rgba1,this.matrices.keypoints,this.matrices.rgba2,[0,255,0,255]),t.imshow("displayCanvas",this.matrices.rgba2);let m=1e3/this.FPS-(Date.now()-s);setTimeout(this.startProcessing.bind(this),m)}loadImage(){this.context.drawImage(this.webcam,0,0,this.width,this.height),this.matrices.rgba1.data.set(this.context.getImageData(0,0,this.width,this.height).data)}stopProcessing(){this.stopped=!0;for(let s in this.matrices)this.matrices[s].delete()}}const a=new c;function e(i){d||(a.stopProcessing(),n.video.facingMode==="environment"?n.video.facingMode="user":n.video.facingMode="environment",d=!0,r=l(r),window.startAR())}h.addEventListener("click",()=>{e()}),navigator.mediaDevices.getUserMedia(n).then(function(i){console.log("Loading webcam..."),r.srcObject=i,r.play(),r.addEventListener("loadeddata",()=>{d=!1,a.onVideoLoaded(r)})}).catch(function(i){console.log("An error occurred! "+i)})})};
